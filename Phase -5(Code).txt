import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

np.random.seed(42)
n_sensors = 4500
time_index = pd.date_range(start='2023-01-01', periods=n_sensors, freq='H')

# Simulate sensor data
def generate_sensor_data():
    data = {
        "Strain Sensor 1": np.random.normal(100, 10, n_sensors),
        "Temperature Sensor 1": np.random.normal(35, 5, n_sensors),
        "Vibration Sensor 1": np.random.normal(0.02, 0.01, n_sensors)
    }
    return pd.DataFrame(data, index=time_index)

df = generate_sensor_data()

# Define anomaly thresholds
strain_threshold = 120
temp_threshold = 40
vibration_threshold = 0.05

# Detect anomalies
def detect_anomalies(df):
    anomalies = pd.DataFrame(index=df.index)
    anomalies['Anomaly'] = (
        (df['Strain Sensor 1'] > strain_threshold) |
        (df['Temperature Sensor 1'] > temp_threshold) |
        (df['Vibration Sensor 1'] > vibration_threshold)
    )
    return anomalies

anomalies = detect_anomalies(df)

# Visualization
plt.figure(figsize=(10, 6))
plt.title("Structural Health Monitoring - Anomaly Detection")
plt.plot(df.index, df['Strain Sensor 1'], label='Strain Sensor 1')
plt.plot(df.index, df['Temperature Sensor 1'], label='Temperature Sensor 1')
plt.plot(df.index, df['Vibration Sensor 1'], label='Vibration Sensor 1')
plt.scatter(df.index[anomalies['Anomaly']], df['Strain Sensor 1'][anomalies['Anomaly']], color='red', label='Anomaly')
plt.legend()
plt.show()

# Save to CSV
df.to_csv("structural_health_monitoring.csv")